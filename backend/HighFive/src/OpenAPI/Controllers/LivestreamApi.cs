/*
 * High Five
 *
 * The OpenAPI specification for High Five's controllers
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class LivestreamApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Endpoint for Create One Time Token use case</remarks>
        /// <param name="getToolFilesRequest"></param>
        /// <response code="200">Returns random one time token</response>
        [HttpPost]
        [Route("/livestream/createOneTimeToken")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(EmptyObject))]
        public abstract IActionResult CreateOneTimeToken([FromBody]GetToolFilesRequest getToolFilesRequest);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Endpoint for Create Streaming Url use case</remarks>
        /// <response code="200">Returns streaming url</response>
        [HttpGet]
        [Route("/livestream/createStreamingUrl")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(DownloadSdkFilesResponse))]
        public abstract IActionResult CreateStreamingUrl();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Endpoint for Return All Livestreams use case</remarks>
        /// <response code="200">Returns all livestream id&#39;s</response>
        [HttpGet]
        [Route("/livestream/returnAllLivestreams")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(EmptyObject))]
        public abstract IActionResult ReturnAllLiveStreams();
    }
}
