openapi: 3.0.0

info:
  version: 0.0.1
  title: High Five
  description: The OpenAPI specification for High Five's controllers

tags:
  - name: "MediaStorage"
  - name: "Test"

  #==========================================================
  #     PATHS
  #==========================================================
paths:

  #==========================================================
  #     TEST SUBSYSTEM PATHING
  #==========================================================

  /test/ping:
    post:
      tags:
        - "Test"
      description: Test if the server is online
      operationId: Ping
      responses:
        "200":
          description: Ping successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pingResponse'

  /test/echo:
    post:
      tags:
        - "Test"
      description: Test if the server is online
      operationId: Echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/echoRequest'
      responses:
        "200":
          description: Ping successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pingResponse'

  #==========================================================
  #     VIDEO STORAGE SUBSYSTEM PATHING
  #==========================================================

  /media/storeVideo:
    post:
      tags:
        - "MediaStorage"
      description: Endpoint for Store Video use case
      operationId: StoreVideo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/storeVideoRequest'
      responses:
        "200":
          description: Video has been stored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeVideoResponse'

  /media/getAllVideos:
    post:
      tags:
        - "MediaStorage"
      description: Endpoint for Get Video Names use case
      operationId: GetAllVideos
      responses:
        "200":
          description: Returns a list of metadata objects of all the videos in the blob storage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getAllVideosResponse'
    
  /media/getVideo:
    post:
      tags:
        - "MediaStorage"
      description: Endpoint for Get Videos use case
      operationId: GetVideo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getVideoRequest'
      responses:
        "200":
          description: Returns a list of the filenames of all videos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVideoResponse'

  #==========================================================
  #     SCHEMAS
  #==========================================================
components:
  schemas:

    #==========================================================
    #     TEST COMPONENTS
    #==========================================================

    pingResponse:
      type: object
      properties:
        message:
          type: string

    echoRequest:
      type: object
      properties:
        message:
          type: string

    #==========================================================
    #     VIDEO STORAGE COMPONENTS
    #==========================================================

    storeVideoRequest:
      type: object
      properties:
        file:
          type: string
          format: binary

    storeVideoResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    retrieveVideosResponse:
      type: object
      properties:
        fileName:
          type: string
    
    getAllVideosResponse:
      type: object
      properties:
        videos:
          type: array
          items:
            $ref: '#/components/schemas/videoMetaData'
    
    getVideoRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
    
    getVideoResponse:
      type: object
      properties:
        file:
          type: string
          format: binary

    videoMetaData:
      type: object
      properties:
        name:
          type: string
        duration:
          type: integer
          description: duration of the video in seconds
        dateStored:
          type: string
          format: date-time
          description: The date-time notation as defined by RFC 3339, section 5.6. e.g. 2017-07-21T17:32:28Z
        id:
          type: string
          format: uuid
        thumbnail:
          type: string
          format: binary

    #==========================================================
    #     GENERIC COMPONENTS
    #==========================================================

    emptyObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
