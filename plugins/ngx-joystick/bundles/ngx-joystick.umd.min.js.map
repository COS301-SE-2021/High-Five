{"version":3,"sources":["../../projects/ngx-joystick/src/lib/ngx-joystick.component.ts","../../projects/ngx-joystick/src/lib/ngx-joystick.module.ts"],"names":["NgxJoystickComponent","el","this","move","EventEmitter","start","end","dir","dirUp","dirDown","dirLeft","dirRight","plain","plainUp","plainDown","plainLeft","plainRight","prototype","ngOnInit","options","zone","nativeElement","getDefaultOptions","manager","nipplejs.create","setupEvents","ngOnDestroy","destroy","mode","position","left","top","color","emitEvent","event","emitter","joystickEvent","data","emit","_this","on","Component","args","selector","template","ElementRef","Input","Output","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit, Output, EventEmitter, Input, ElementRef, OnDestroy } from '@angular/core';\nimport * as nipplejs from 'nipplejs';\n\nexport interface JoystickEvent {\n  event: nipplejs.EventData;\n  data: nipplejs.JoystickOutputData;\n}\n\n@Component({\n  selector: 'ngx-joystick',\n  template: `\n  <div style=\"width: 100%; height: 100%\" id=\"static\"></div>\n  `,\n  styles: [],\n})\nexport class NgxJoystickComponent implements OnInit, OnDestroy {\n  @Input() options: nipplejs.JoystickManagerOptions;\n  @Output() move = new EventEmitter<JoystickEvent>();\n  // tslint:disable-next-line:no-output-native\n  @Output() start = new EventEmitter<JoystickEvent>();\n  // tslint:disable-next-line:no-output-native\n  @Output() end = new EventEmitter<JoystickEvent>();\n  @Output() dir = new EventEmitter<JoystickEvent>();\n  @Output() dirUp = new EventEmitter<JoystickEvent>();\n  @Output() dirDown = new EventEmitter<JoystickEvent>();\n  @Output() dirLeft = new EventEmitter<JoystickEvent>();\n  @Output() dirRight = new EventEmitter<JoystickEvent>();\n  @Output() plain = new EventEmitter<JoystickEvent>();\n  @Output() plainUp = new EventEmitter<JoystickEvent>();\n  @Output() plainDown = new EventEmitter<JoystickEvent>();\n  @Output() plainLeft = new EventEmitter<JoystickEvent>();\n  @Output() plainRight = new EventEmitter<JoystickEvent>();\n\n  manager: nipplejs.JoystickManager;\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    if (!this.options) {\n      this.options = this.getDefaultOptions();\n    } else {\n      this.options.zone = this.el.nativeElement;\n    }\n\n    this.manager = nipplejs.create(this.options);\n\n    this.setupEvents();\n  }\n\n  ngOnDestroy() {\n    this.manager.destroy();\n  }\n\n  private getDefaultOptions(): nipplejs.JoystickManagerOptions {\n    const options: nipplejs.JoystickManagerOptions = {\n      zone: this.el.nativeElement,\n      mode: 'static',\n      position: { left: '50%', top: '50%' },\n      color: 'blue'\n    };\n    return options;\n  }\n\n  private emitEvent(event: any, emitter: EventEmitter<any>) {\n    const joystickEvent: JoystickEvent = { event: event.event, data: event.data };\n    emitter.emit(joystickEvent);\n  }\n\n  private setupEvents() {\n    this.manager.on('move', (event, data) => { this.emitEvent({event, data}, this.move); });\n    this.manager.on('start', (event, data) => { this.emitEvent({event, data}, this.start); });\n    this.manager.on('end', (event, data) => { this.emitEvent({event, data}, this.end); });\n    this.manager.on('dir', (event, data) => { this.emitEvent({event, data}, this.dir); });\n    this.manager.on('dir:up', (event, data) => { this.emitEvent({event, data}, this.dirUp); });\n    this.manager.on('dir:down', (event, data) => { this.emitEvent({event, data}, this.dirDown); });\n    this.manager.on('dir:left', (event, data) => { this.emitEvent({event, data}, this.dirLeft); });\n    this.manager.on('dir:right', (event, data) => { this.emitEvent({event, data}, this.dirRight); });\n    this.manager.on('plain', (event, data) => { this.emitEvent({event, data}, this.plain); });\n    this.manager.on('plain:up', (event, data) => { this.emitEvent({event, data}, this.plainUp); });\n    this.manager.on('plain:down', (event, data) => { this.emitEvent({event, data}, this.plainDown); });\n    this.manager.on('plain:left', (event, data) => { this.emitEvent({event, data}, this.plainLeft); });\n    this.manager.on('plain:right', (event, data) => { this.emitEvent({event, data}, this.plainRight); });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxJoystickComponent } from './ngx-joystick.component';\n\n@NgModule({\n  declarations: [NgxJoystickComponent],\n  imports: [\n  ],\n  exports: [NgxJoystickComponent]\n})\nexport class NgxJoystickModule { }\n"]}