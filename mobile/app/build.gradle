plugins {
    id 'com.android.application'
    id 'kotlin-android'
    //Room
    id 'kotlin-kapt'
    //Hilt
    id 'dagger.hilt.android.plugin'

    id 'com.google.secrets_gradle_plugin' version '0.4'

}
apply plugin: 'dagger.hilt.android.plugin'
android {
    packagingOptions{
        pickFirst "androidsupportmultidexversion.txt"
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.bdpsolutions.highfive"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["androidManifestFile": "$projectDir/src/main/AndroidManifest.xml".toString()]
            }
        }
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.bdpsolutions.highfive'
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    packagingOptions {

    }
}

kapt {
    javacOptions {
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support:multidex:$multidex_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.vectordrawable:vectordrawable:$vectordrawable_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.annotation:annotation:$annotation_version"
    implementation "com.google.devtools.ksp:symbol-processing-api:$ksp_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_version"
    implementation "com.android.volley:volley:$volley_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_converter_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"
    implementation "commons-io:commons-io:$commons_io_version"
    implementation "net.openid:appauth:$appauth_version"

    kapt "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "com.google.truth:truth:$truth_version"

    //Room dependencies

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbolic Processing (KSP)
    //ksp("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    //Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"

    //PowerMock
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4-rule-agent:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"

}