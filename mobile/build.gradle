// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    //library and dependency versions
    ext.kotlin_version = "1.5.21"
    ext.hilt_version = "2.37"
    ext.room_version = "2.3.0"
    ext.truth_version = "1.1.3"
    ext.junit_version = "5.7.2"
    ext.volley_version = "1.2.0"
    ext.core_ktx_version = "1.6.0"
    ext.appcompat_version = "1.3.1"
    ext.constraintlayout_version = "2.1.0"
    ext.multidex_version = "1.0.3"
    ext.material_version = "1.4.0"
    ext.vectordrawable_version = "1.1.0"
    ext.lifecycle_version = "2.3.1"
    ext.navigation_version = "2.3.5"
    ext.annotation_version = "1.2.0"
    ext.ksp_version = "1.5.21-1.0.0-beta06"
    ext.legacy_version = "1.0.0"
    ext.junit_ext_version = "1.1.3"
    ext.espresso_version = "3.4.0"
    ext.glide_version = "4.12.0"
    ext.retrofit_version = "2.9.0"
    ext.retrofit_converter_version = "2.8.1"
    ext.mockito_version = "3.11.2"
    ext.masl_version = "2.1.0"
    ext.commons_io_version = "2.11.0"


    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        mavenLocal()
        maven {
            url 'https://pkgs.dev.azure.com/MicrosoftDeviceSDK/DuoSDK-Public/_packaging/Duo-SDK-Feed/maven/v1'
        }
        maven {
            name "vsts-maven-adal-android"
            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
            credentials {
                username System.getenv("ENV_VSTS_MVN_ANDROIDADAL_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDADAL_USERNAME") : project.findProperty("vstsUsername")
                password System.getenv("ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN") : project.findProperty("vstsMavenAccessToken")
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}